name: CI

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]
  # Runs on pull requests opened or reopened targeting the default branch
  pull_request:
    types: [opened, reopened]
    branches: ["main"]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write
    
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set-up Node
        uses: actions/setup-node@v1
        with:
         node-version: 20.x
      - name: Install Dependencies
        run: npm install
      - name: Lint
        run: node_modules/eslint/bin/eslint.js -c eslint.config.js script.js
  
  test:
    # machine in which the job is executed (docker)
    runs-on: ubuntu-latest
    needs: lint
    # steps of the job
    steps:
      # you can use run commands to execute commands in your VM, for instance, for loggin purposes
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      # This is a simple job that requires first of all checking out the code
      - uses: actions/checkout@v3
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      # We need node.js to execute our tests
      - name: Set-up Node
        uses: actions/setup-node@v1
        with:
         node-version: 20.x
      # The required dependencies for node.js are declared in package.json and installed with the following command   
      - name: Install Dependencies
        run: |
          npm install
      # The last step is executing the test cases    
      - name: Test
        run: node_modules/.bin/mocha-headless-chrome -f test.html --args no-sandbox
      # If any of the steps fail, the job will fail. If any test fails (red) the job will fail  
      - run: echo "🍏 This job's status is ${{ job.status }}."

  build:
    runs-on: ubuntu-latest
    needs: test 
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - run: mkdir dist
      - run: cp index.html dist/
      - run: cp script.js dist/
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'dist'
 
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Setup Pages
        uses: actions/configure-pages@v2
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
